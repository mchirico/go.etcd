name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: cfssl
      run: |
        wget https://github.com/cloudflare/cfssl/releases/download/v1.5.0/cfssl_1.5.0_linux_amd64
        wget https://github.com/cloudflare/cfssl/releases/download/v1.5.0/cfssljson_1.5.0_linux_amd64
        chmod +x cfssljson_1.5.0_linux_amd64
        chmod +x cfssl_1.5.0_linux_amd64
        sudo mv cfssl_1.5.0_linux_amd64 /usr/local/bin/cfssl 
        sudo mv cfssljson_1.5.0_linux_amd64 /usr/local/bin/cfssljson

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v ./...

    - name: certs
      run: |
        cd certs && ./run.sh
        cd ./..
        sudo cp -r certs /certs

    - name: run etcd
      run: |
        docker run -d \
           -it \
           --name etcd \
           -p 2379:2379 \
           -v /certs:/certs \
           quay.io/mchirico/etcd:test

    - name: Test
      run: go test -race -v -coverprofile=coverage.txt ./...
  
    - name: Codecov Setup
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Codecov Run
      run: |
        bash <(curl -s https://codecov.io/bash)
